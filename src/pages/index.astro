---
import Layout from "../layouts/Layout.astro";
import PlayerList from "../components/PlayerList.astro";
import { playerData } from "../../player-data.ts";
---

<Layout title="Muchachos.">
  <div class="scroll-gradient"></div>
  <PlayerList title="Attackers" players={playerData.attackers} />
  <PlayerList title="Midfielders" players={playerData.midfielders} />
  <PlayerList title="Defenders" players={playerData.defenders} />
  <PlayerList title="Goalkeepers" players={playerData.goalkeepers} />
</Layout>

<style>
  .scroll-gradient {
    content: "";
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 20%;
    background: linear-gradient(to top, #13151a 0%, transparent 100%);
    z-index: 1;
    pointer-events: none;
  }
</style>

<script is:inline>
function handleIntersection(target, callback) {
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        callback();
        observer.unobserve(target);

        const cardId = target.getAttribute("data-card-id");
        const intersectedCards =
          JSON.parse(sessionStorage.getItem("intersectedCards")) || [];
        if (!intersectedCards.includes(cardId)) {
          intersectedCards.push(cardId);
          sessionStorage.setItem(
            "intersectedCards",
            JSON.stringify(intersectedCards)
          );
        }
      }
    });
  });

  observer.observe(target);
}

function handleCardIntersection(card) {
  const cardId = card.getAttribute("data-card-id");
  const intersectedCards =
    JSON.parse(sessionStorage.getItem("intersectedCards")) || [];

  if (!intersectedCards.includes(cardId)) {
    card.classList.remove("active");
    handleIntersection(card, () => {
      card.classList.add("active");
    });
  }
}

const cards = document.querySelectorAll(".link-card");

cards.forEach((card) => {
  handleCardIntersection(card);
});
</script>
