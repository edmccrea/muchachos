---
interface Props {
  firstName: string;
  lastName: string;
  number: number;
  href: string;
  key: string;
}

const { href, firstName, lastName, number, key } = Astro.props;
const slugifiedPlayerName = href.split("/")[2];
---

<li
  class="link-card flex list-none bg-[#23262d] rounded-lg active"
  data-card-id={key}
>
  <a href={href} class="rounded-lg h-[315px] w-full bg-[#23262d]">
    <div class="flex flex-col h-full">
      <!-- Need to implement a cache busting strategy for the images  -->
      <img
        src={`https://res.cloudinary.com/edmccrea/image/upload/fl_immutable_cache/c_scale,w_1200/v1699650999/Muchachos/players/${slugifiedPlayerName}.webp`}
        alt={`${firstName} ${lastName}`}
        class="w-full h-[80%] object-cover rounded-t-lg"
        transition:name={`img-${number}`}
      />
      <div class="flex justify-between items-center p-4 relative">
        <div>
          <h2 class="text-2xl">
            {firstName}<br />
            {lastName}
          </h2>
        </div>
        <p class="text-5xl text-slate-300/20 absolute right-2 md:relative">
          {number}
        </p>
      </div>
    </div>
  </a>
</li>
<style>
  .link-card {
    background-image: none;
    background-size: 400%;
    background-position: 100%;
    transition: background-position 0.9s cubic-bezier(0.22, 1, 0.36, 1);
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.5s,
      transform 0.5s;
  }

  .link-card.active {
    opacity: 1;
    transform: translateY(0);
  }
  .link-card > a {
    text-decoration: none;
    line-height: 1.4;
    opacity: 0.9;
  }
  h2 {
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
